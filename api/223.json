{"title":"什么是好的程序员？ 摘自rxiao.com","zzzContent":"<p>什么是好的程序员？是不是懂得很多技术细节？还是懂底层编程？还是编程速度比较快？我觉得都不是。对于一些技术细节来说和底层的技术，只要看帮助，查资料就能找到，对于速度快，只要编得多也就熟能生巧了。 我认为好的程序员应该有以下几方面的素质： </p>\n<p>有专研精神，勤学善问、举一反三。</p>\n<p>积极向上的态度，有创造性思维。</p>\n<p>与人积极交流沟通的能力，有团队精神。</p>\n<p>谦虚谨慎，戒骄戒躁。</p>\n<p>写出的代码质量高。包括：代码的稳定、易读、规范、易维护、专业。</p>\n<p>      这些都是程序员的修养，这里我想谈谈“编程修养”，也就是上述中的第5点。我觉得，如果我要了解一个作者，我会看他所写的小说，如果我要了解一个画家，我会看他所画的图画，如果我要了解一个工人，我会看他所做出来的产品，同样，如果我要了解一个程序员，我想首先我最想看的就是他的程序代码，程序代码可以看出一个程序员的素质和修养，程序就像一个作品，有素质有修养的程序员的作品必然是一图精美的图画，一首美妙的歌曲，一本赏心悦目的小说。 </p>\n<p>      我看过许多程序，没有注释，没有缩进，胡乱命名的变量名，等等，等等，我把这种人统称为没有修养的程序，这种程序员，是在做创造性的工作吗？不，完全就是在搞破坏，他们与其说是在编程，还不如说是在对源程序进行“加密”，这种程序员，见一个就应该开除一个，因为他编的程序所创造的价值，远远小于需要在上面进行维护的价值。 </p>\n<p>      程序员应该有程序员的修养，那怕再累，再没时间，也要对自己的程序负责。我宁可要那种动作慢，技术一般，但有良好的写程序风格的程序员，也不要那种技术强、动作快的“搞破坏”的程序员。有句话叫“字如其人”，我想从程序上也能看出一个程序员的优劣。因为，程序是程序员的作品，作品的好坏直截关系到程序员的声誉和素质。而“修养”好的程序员一定能做出好的程序和软件。 </p>\n<p>      有个成语叫“独具匠心”，意思是做什么都要做得很专业，很用心，如果你要做一个“匠”，也就是造诣高深的人，那么，从一件很简单的作品上就能看出你有没有“匠”的特性，我觉得做一个程序员不难，但要做一个“程序匠”就不简单了。编程序很简单，但编出有质量的程序就难了。 </p>\n<p>      我在这里不讨论过深的技术，我只想在一些容易让人忽略的东西上说一说，虽然这些东西可能很细微，但如果你不注意这些细微之处的话，那么他将会极大的影响你的整个软件质量，以及整个软件程的实施，所谓“千里之堤，毁于蚁穴”。“细微之处见真功”，真正能体现一个程序的功底恰恰在这些细微之处。 </p>\n<p>      这就是程序员的——编程修养。我总结了在用C/C++语言（主要是C语言）进行程序写作上的三十二个“修养”，通过这些，你可以写出质量高的程序，同时也会让看你程序的人渍渍称道，那些看过你程序的人一定会说：“这个人的编程修养不错”。 </p>\n<p>    ———————————————————————— </p>\n<p>        01、版权和版本<br />\n        02、缩进、空格、换行、空行、对齐<br />\n        03、程序注释<br />\n        04、函数的[in][out]参数<br />\n        05、对系统调用的返回进行判断<br />\n        06、if 语句对出错的处理<br />\n        07、头文件中的#ifndef<br />\n        08、在堆上分配内存<br />\n        09、变量的初始化<br />\n        10、h和c文件的使用<br />\n        11、出错信息的处理<br />\n        12、常用函数和循环语句中的被计算量<br />\n        13、函数名和变量名的命名<br />\n        14、函数的传值和传指针<br />\n        15、修改别人程序的修养<br />\n        16、把相同或近乎相同的代码形成函数和宏<br />\n        17、表达式中的括号<br />\n        18、函数参数中的const<br />\n        19、函数的参数个数<br />\n        20、函数的返回类型，不要省略<br />\n        21、goto语句的使用<br />\n        22、宏的使用<br />\n        23、static的使用<br />\n        24、函数中的代码尺寸<br />\n        25、typedef的使用<br />\n        26、为常量声明宏<br />\n        27、不要为宏定义加分号\n</p>","postDate":"2004-11-01 20:41:46","postId":223,"type":"post","status":"publish","imported":true,"file":"223.md"}