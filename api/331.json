{"title":"不用申请APIkey，也能用akismet让wordpress的垃圾评论大大减少","zzzContent":"今天打开wordpress,我晕，留言数已经有10多万。\n老外们工作还真积极，这几天垃圾评论是越来越厉害了。\n我想起前几天还说要自己写一个能分页管理评论的hack呢。不过现在实在没空。\n于是想到，管他垃圾不垃圾，我现在暂时先全删除了再说。\n于是打phpmyadmin,把ID>350的记录全删除了。\n这下再打开，不过发现马上就又有了几十条记录了。看来垃圾生产机器工作真够负责的啊，简直是日夜不停了。\n想起有一个什么反垃圾评论的插件，google一下，叫akismet,装上一看，倒，还要我去申请一个API　key才能用。\n本来特懒，不过现在垃圾评论这么狂，只好去注册。\n结果，打了好几次地址，wordpress.com/api-keys都打不开，没办法。我想，那我做一个hack,把用api key认证的这一步去掉不行吗?\n打开akismet.php，哈哈，原来如此简单，修改过程如下:\n找到<coolcode lang=\"php\">function akismet_verify_key( $key ) { </coolcode>,直接在后面加上:\n\t<coolcode lang='php'>return ture;</coolcode>\n就行了。\n上传了一下，然后再来到要求输入API key的页面:/wp-admin/plugins.php?page=akismet/akismet.php,随便输入一个，我输的是123456,然后update,就成功了。\n返回管理页面一个，哈哈，下面就列着一个大大的菜单: <strong>Akismet反垃圾(0)</strong>。棒极了！\n点进去一看:\n<coolcode>\n抓到的垃圾:\n队列中没有垃圾评论，今天可能是您的幸运日！:\n</coolcode>\n真不错。看来akismet的作者也是深受垃圾侵扰之苦，所以要这么写。\n附上akismet的全部代码.\n如果您还没有安装akismet,您可以下载下来，保存成akismet.php,放到您的wordpress的wp-content/plugins/akismet.php位置，再到插件菜单下去激活，安装一下就可以了:\n<coolcode lang=\"php\">\n<?php\n/*\nPlugin Name: Akismet\nPlugin URI: http://akismet.com/\nDescription: Akismet checks your comments against the Akismet web serivce to see if they look like spam or not. You need a <a href=\"http://wordpress.com/api-keys/\">WordPress.com API key</a> to use this service. You can review the spam it catches under \"Manage\" and it automatically deletes old spam after 15 days. Hat tip: <a href=\"http://ioerror.us/\">Michael Hampton</a> and <a href=\"http://chrisjdavis.org/\">Chris J. Davis</a> for help with the plugin.\nAuthor: Matt Mullenweg\nVersion: 1.14\nAuthor URI: http://photomatt.net/\n*/\n\nadd_action('admin_menu', 'ksd_config_page');\n\nfunction ksd_config_page() {\n\tglobal $wpdb;\n\tif ( function_exists('add_submenu_page') )\n\t\tadd_submenu_page('plugins.php', __('Akismet Configuration'), __('Akismet Configuration'), 1, __FILE__, 'akismet_conf');\n}\n\nfunction akismet_conf() {\n\tif ( isset($_POST['submit']) ) {\n\t\tcheck_admin_referer();\n\t\t$key = preg_replace('/[^a-h0-9]/i', '', $_POST['key']);\n\t\tif ( akismet_verify_key( $key ) )\n\t\t\tupdate_option('wordpress_api_key', $key);\n\t\telse\n\t\t\t$invalid_key = true;\n\t}\n\tif ( !akismet_verify_key( get_option('wordpress_api_key') ) )\n\t\t$invalid_key = true;\n?>\n\n<div class=\"wrap\">\n<h2><?php _e('Akismet Configuration'); ?></h2>\n\t<p><?php printf(__('For many people, <a href=\"%1$s\">Akismet</a> will greatly reduce or even completely eliminate the comment and trackback spam you get on your site. If one does happen to get through, simply mark it as \"spam\" on the moderation screen and Akismet will learn from the mistakes. If you don't have a WordPress.com account yet, you can get one at <a href=\"%2$s\">WordPress.com</a>.'), 'http://akismet.com/', 'http://wordpress.com/api-keys/'); ?></p>\n\n<form action=\"\" method=\"post\" id=\"akismet-conf\" style=\"margin: auto; width: 25em; \">\n<h3><label for=\"key\"><?php _e('WordPress.com API Key'); ?></label></h3>\n<?php if ( $invalid_key ) { ?>\n\t<p style=\"padding: .5em; background-color: #f33; color: #fff; font-weight: bold;\"><?php _e('Your key appears invalid. Double-check it.'); ?></p>\n<?php } ?>\n<p><input id=\"key\" name=\"key\" type=\"text\" size=\"15\" maxlength=\"12\" value=\"<?php echo get_option('wordpress_api_key'); ?>\" style=\"font-family: 'Courier New', Courier, mono; font-size: 1.5em;\" /> (<?php _e('<a href=\"http://faq.wordpress.com/2005/10/19/api-key/\">What is this?</a>'); ?>)</p>\n\t<p class=\"submit\"><input type=\"submit\" name=\"submit\" value=\"<?php _e('Update API Key &raquo;'); ?>\" /></p>\n</form>\n</div>\n<?php\n}\n\nfunction akismet_verify_key( $key ) {\n\treturn true;\n\t/**\n\t*@edit by xurenlu 14:54 2006-12-17\n\t*@url:http://blog.deskor.com\n\t*/\n\tglobal $auto_comment_approved, $ksd_api_host, $ksd_api_port;\n\t$blog = urlencode( get_option('home') );\n\t$response = ksd_http_post(\"key=$key&blog=$blog\", 'rest.akismet.com', '/1.1/verify-key', $ksd_api_port);\n\n\tif ( 'valid' == $response[1] )\n\t\treturn true;\n\telse\n\t\treturn false;\n}\n\nif ( !get_option('wordpress_api_key') && !isset($_POST['submit']) ) {\n\tfunction akismet_warning() {\n\t$path = plugin_basename(__FILE__);\n\t\techo \"\n\t\t<div id='akismet-warning' class='updated fade-ff0000'><p><strong>\".__('Akismet is not active.').\"</strong> \".sprintf(__('You must <a href=\"%1$s\">enter your WordPress.com API key</a> for it to work.'), \"plugins.php?page=$path\").\"</p></div>\n\t\t<style type='text/css'>\n\t\t#adminmenu { margin-bottom: 5em; }\n\t\t#akismet-warning { position: absolute; top: 7em; }\n\t\t</style>\n\t\t\";\n\t}\n\tadd_action('admin_footer', 'akismet_warning');\n\treturn;\n}\n\n$ksd_api_host = get_option('wordpress_api_key') . '.rest.akismet.com';\n$ksd_api_port = 80;\n$ksd_user_agent = \"WordPress/$wp_version | Akismet/1.14\";\n\n// Returns array with headers in $response[0] and entity in $response[1]\nfunction ksd_http_post($request, $host, $path, $port = 80) {\n\tglobal $ksd_user_agent;\n\n\t$http_request  = \"POST $path HTTP/1.0rn\";\n\t$http_request .= \"Host: $hostrn\";\n\t$http_request .= \"Content-Type: application/x-www-form-urlencoded; charset=\" . get_settings('blog_charset') . \"rn\";\n\t$http_request .= \"Content-Length: \" . strlen($request) . \"rn\";\n\t$http_request .= \"User-Agent: $ksd_user_agentrn\";\n\t$http_request .= \"rn\";\n\t$http_request .= $request;\n\n\t$response = '';\n\tif( false !== ( $fs = @fsockopen($host, $port, $errno, $errstr, 3) ) ) {\n\t\tfwrite($fs, $http_request);\n\n\t\twhile ( !feof($fs) )\n\t\t\t$response .= fgets($fs, 1160); // One TCP-IP packet\n\t\tfclose($fs);\n\t\t$response = explode(\"rnrn\", $response, 2);\n\t}\n\treturn $response;\n}\n\nfunction ksd_auto_check_comment( $comment ) {\n\tglobal $auto_comment_approved, $ksd_api_host, $ksd_api_port;\n\t$comment['user_ip']    = $_SERVER['REMOTE_ADDR'];\n\t$comment['user_agent'] = $_SERVER['HTTP_USER_AGENT'];\n\t$comment['referrer']   = $_SERVER['HTTP_REFERER'];\n\t$comment['blog']       = get_option('home');\n\n\t$ignore = array( 'HTTP_COOKIE' );\n\n\tforeach ( $_SERVER as $key => $value )\n\t\tif ( !in_array( $key, $ignore ) )\n\t\t\t$comment[\"$key\"] = $value;\n\n\t$query_string = '';\n\tforeach ( $comment as $key => $data )\n\t\t$query_string .= $key . '=' . urlencode( stripslashes($data) ) . '&';\n\n\t$response = ksd_http_post($query_string, $ksd_api_host, '/1.1/comment-check', $ksd_api_port);\n\tif ( 'true' == $response[1] ) {\n\t\t$auto_comment_approved = 'spam';\n\t\tupdate_option( 'akismet_spam_count', get_option('akismet_spam_count') + 1 );\n\t}\n\takismet_delete_old();\n\treturn $comment;\n}\n\nfunction akismet_delete_old() {\n\tglobal $wpdb;\n\t$now_gmt = current_time('mysql', 1);\n\t$wpdb->query(\"DELETE FROM $wpdb->comments WHERE DATE_SUB('$now_gmt', INTERVAL 15 DAY) > comment_date_gmt AND comment_approved = 'spam'\");\n\t$n = mt_rand(1, 5);\n\tif ( $n % 5 )\n\t\t$wpdb->query(\"OPTIMIZE TABLE $wpdb->comments\");\n}\n\nfunction ksd_auto_approved( $approved ) {\n\tglobal $auto_comment_approved;\n\tif ( 'spam' == $auto_comment_approved )\n\t\t$approved = $auto_comment_approved;\n\treturn $approved;\n}\n\nfunction ksd_submit_nonspam_comment ( $comment_id ) {\n\tglobal $wpdb, $ksd_api_host, $ksd_api_port;\n\n\t$comment = $wpdb->get_row(\"SELECT * FROM $wpdb->comments WHERE comment_ID = '$comment_id'\");\n\tif ( !$comment ) // it was deleted\n\t\treturn;\n\t$comment->blog = get_option('home');\n\t$query_string = '';\n\tforeach ( $comment as $key => $data )\n\t\t$query_string .= $key . '=' . urlencode( stripslashes($data) ) . '&';\n\t$response = ksd_http_post($query_string, $ksd_api_host, \"/1.1/submit-ham\", $ksd_api_port);\n}\n\nfunction ksd_submit_spam_comment ( $comment_id ) {\n\tglobal $wpdb, $ksd_api_host, $ksd_api_port;\n\n\t$comment = $wpdb->get_row(\"SELECT * FROM $wpdb->comments WHERE comment_ID = '$comment_id'\");\n\tif ( !$comment ) // it was deleted\n\t\treturn;\n\tif ( 'spam' != $comment->comment_approved )\n\t\treturn;\n\t$comment->blog = get_option('home');\n\t$query_string = '';\n\tforeach ( $comment as $key => $data )\n\t\t$query_string .= $key . '=' . urlencode( stripslashes($data) ) . '&';\n\n\t$response = ksd_http_post($query_string, $ksd_api_host, \"/1.1/submit-spam\", $ksd_api_port);\n}\n\nadd_action('wp_set_comment_status', 'ksd_submit_spam_comment');\nadd_action('edit_comment', 'ksd_submit_spam_comment');\nadd_action('preprocess_comment', 'ksd_auto_check_comment', 1);\nadd_filter('pre_comment_approved', 'ksd_auto_approved');\n\n\nfunction ksd_spam_count() {\n\tglobal $wpdb, $comments;\n\t$count = $wpdb->get_var(\"SELECT COUNT(comment_ID) FROM $wpdb->comments WHERE comment_approved = 'spam'\");\n\treturn $count;\n}\n\nfunction ksd_manage_page() {\n\tglobal $wpdb;\n\t$count = sprintf(__('Akismet Spam (%s)'), ksd_spam_count());\n\tif ( function_exists('add_management_page') )\n\t\tadd_management_page(__('Akismet Spam'), $count, 1, __FILE__, 'ksd_caught');\n}\n\nfunction ksd_caught() {\n\tglobal $wpdb, $comment;\n\tif (isset($_POST['submit']) && 'recover' == $_POST['action'] && ! empty($_POST['not_spam'])) {\n\t\t$i = 0;\n\t\tforeach ($_POST['not_spam'] as $comment):\n\t\t\t$comment = (int) $comment;\n\t\t\tif ( function_exists('wp_set_comment_status') )\n\t\t\t\twp_set_comment_status($comment, 'approve');\n\t\t\telse\n\t\t\t\t$wpdb->query(\"UPDATE $wpdb->comments SET comment_approved = '1' WHERE comment_ID = '$comment'\");\n\t\t\tksd_submit_nonspam_comment($comment);\n\t\t\t++$i;\n\t\tendforeach;\n\t\techo '<div class=\"updated\"><p>' . sprintf(__('%1$s comments recovered.'), $i) . \"</p></div>\";\n\t}\n\tif ('delete' == $_POST['action']) {\n\t\t$delete_time = addslashes( $_POST['display_time'] );\n\t\t$nuked = $wpdb->query( \"DELETE FROM $wpdb->comments WHERE comment_approved = 'spam' AND '$delete_time' > comment_date_gmt\" );\n\t\tif (isset($nuked)) {\n\t\t\techo '<div class=\"updated\"><p>';\n\t\t\tif ($nuked) {\n\t\t\t\t_e('All spam deleted.');\n\t\t\t}\n\t\t\techo \"</p></div>\";\n\t\t}\n\t}\n?>\n<div class=\"wrap\">\n<h2><?php _e('Caught Spam') ?></h2>\n<?php\n$count = get_option('akismet_spam_count');\nif ( $count ) {\n?>\n<p><?php printf(__('Akismet has caught <strong>%1$s</strong> spam for you since you installed it.'), number_format($count) ); ?></p>\n<?php\n}\n$spam_count = ksd_spam_count();\nif (0 == $spam_count) {\n\techo '<p>'.__('You have no spam currently in the queue. Must be your lucky day. :)').'</p>';\n\techo '</div>';\n} else {\n\techo '<p>'.__('You can delete all of the spam from your database with a single click. This operation cannot be undone, so you may wish to check to ensure that no legitimate comments got through first. Spam is automatically deleted after 15 days, so don&#8217;t sweat it.').'</p>';\n?>\n<form method=\"post\" action=\"\">\n<input type=\"hidden\" name=\"action\" value=\"delete\" />\n<?php printf(__('There are currently %1$s comments identified as spam.'), $spam_count); ?>&nbsp; &nbsp; <input type=\"submit\" name=\"Submit\" value=\"<?php _e('Delete all'); ?>\" />\n<input type=\"hidden\" name=\"display_time\" value=\"<?php echo current_time('mysql', 1); ?>\" />\n</form>\n</div>\n<div class=\"wrap\">\n<h2><?php _e('Last 15 days'); ?></h2>\n<?php echo '<p>'.__('These are the latest comments identified as spam by Akismet. If you see any mistakes, simply mark the comment as \"not spam\" and Akismet will learn from the submission. If you wish to recover a comment from spam, simply select the comment, and click Not Spam. After 15 days we clean out the junk for you.').'</p>'; ?>\n<?php\n$comments = $wpdb->get_results(\"SELECT * FROM $wpdb->comments WHERE comment_approved = 'spam' ORDER BY comment_date DESC LIMIT 150\");\n\nif ($comments) {\n?>\n<form method=\"post\" action=\"<?php echo $_SERVER['REQUEST_URI']; ?>\">\n<input type=\"hidden\" name=\"action\" value=\"recover\" />\n<ol id=\"spam-list\" class=\"commentlist\">\n<?php\n$i = 0;\nforeach($comments as $comment) {\n\t$i++;\n\t$comment_date = mysql2date(get_settings(\"date_format\") . \" @ \" . get_settings(\"time_format\"), $comment->comment_date);\n\t$post = get_post($comment->comment_post_ID);\n\t$post_title = $post->post_title;\n\tif ($i % 2) $class = 'class=\"alternate\"';\n\telse $class = '';\n\techo \"nt<li id='comment-$comment->comment_ID' $class>\";\n\t?>\n\t<p><strong><?php _e('Name:') ?></strong> <?php comment_author_link() ?> <?php if ($comment->comment_author_email) { ?>| <strong><?php _e('E-mail:') ?></strong> <?php comment_author_email_link() ?> <?php } if ($comment->comment_author_url && 'http://' != $comment->comment_author_url) { ?> | <strong><?php _e('URI:') ?></strong> <?php comment_author_url_link() ?> <?php } ?>| <strong><?php _e('IP:') ?></strong> <a href=\"http://ws.arin.net/cgi-bin/whois.pl?queryinput=<?php comment_author_IP() ?>\"><?php comment_author_IP() ?></a> | <strong><?php _e('Date:') ?></strong> <?php comment_date(); ?></p>\n<?php comment_text() ?>\n<label for=\"spam-<?php echo $comment->comment_ID; ?>\">\n<input type=\"checkbox\" id=\"spam-<?php echo $comment->comment_ID; ?>\" name=\"not_spam[]\" value=\"<?php echo $comment->comment_ID; ?>\" />\n<?php _e('Not Spam') ?></label>\n<?php\n}\n}\n?>\n</ol>\n<p class=\"submit\">\n<input type=\"submit\" name=\"submit\" value=\"<?php _e('Not Spam &raquo;'); ?>\" />\n</p>\n</form>\n</div>\n<?php\n\t}\n}\n\nadd_action('admin_menu', 'ksd_manage_page');\n\nfunction akismet_stats() {\n\t$count = get_option('akismet_spam_count');\n\tif ( !$count )\n\t\treturn;\n\t$path = plugin_basename(__FILE__);\n\techo '<h3>'.__('Spam').'</h3>';\n\techo '<p>'.sprintf(__('<a href=\"%1$s\">Akismet</a> has protected your site from <a href=\"%2$s\">%3$s spam comments</a>.'), 'http://akismet.com/', \"edit.php?page=$path\", number_format($count) ).'</p>';\n}\n\nadd_action('activity_box_end', 'akismet_stats');\n\n?>\n\n</coolcode>","postDate":"2006-12-17 15:26:31","postId":331,"type":"post","status":"publish","imported":true,"file":"331.md"}