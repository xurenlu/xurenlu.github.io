{"title":"用PHP和xapian构建全文检索[转]","zzzContent":"大约从07年起,本博客就不转载了;\n这篇算是以译文发的,原文在:<a href=\"http://www.contentwithstyle.co.uk/content/searching-with-xapian-and-php\">http://www.contentwithstyle.co.uk/content/searching-with-xapian-and-php</a>\n========邪恶的分割线============\n有的时候呢,嗯 ,mysql 就是不够快;尤其是在做全文检索的时候.各个字段都得正确地检索才行,而当我们的各个字段带有不同的权重时,事情就马上变得特别复杂了,这时你就需要xapian来救急了.\n<strong>Xapian是什么东东</strong>\nxapian是一个全文检索库,就和lucene和sphinx一样;它需要从c++代码编译,比较底层;现在已经有直接可用的php,perl,python绑定可以用了.目前提供了redhat和ubuntu的包;你可以在Mac os上编译,还可以通过cygwin来在windows下运行.\n<strong>示例脚本</strong>\n我不想去解释why和how,我只想展示一个简单的脚本;我封装的php文件有点大,读者可以从<a href=\"http://www.contentwithstyle.co.uk/content/searching-with-xapian-and-php\">这</a>下载;\n<strong>db.sql</strong>\n<coolcode lang=\"sql\">\n\nCREATE DATABASE `demo`;\n\nCREATE TABLE `demo`.`demo` (\n`id` INT( 10 ) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY ,\n`unique_key` VARCHAR( 255 ) NOT NULL ,\n`name` VARCHAR( 255 ) NULL DEFAULT NULL ,\n`summary` TEXT NULL DEFAULT NULL ,\n`date` DATETIME NULL DEFAULT NULL ,\nUNIQUE (`unique_key`));\n\nINSERT INTO `demo`.`demo`\n(`id`, `unique_key`, `name`, `summary`, `date`)\nVALUES (NULL, 'foo', 'foo', 'foo bar test', '2008-11-05 00:00:00'),\n(NULL , 'bar', 'bar', 'test foo bar', '2009-11-05 00:00:00');\n</coolcode>\n<b>XapianWrapper.php</b>\n<coolcode lang=\"php\">\n\n<?php\n// includes\nrequire_once 'xapian.php';\n\n// main class\nclass XapianWrapper {\n  const XAPIAN_FIELD_URL = 0;\n  const XAPIAN_FIELD_NAME = 1;\n  const XAPIAN_FIELD_DATE = 2;\n  const XAPIAN_FIELD_UID = 3;\n  const XAPIAN_FIELD_SUMMARY = 4;\n  const XAPIAN_PREFIX_UID = \"UID:\";\n\n  const SETTINGS_XAPIAN_DB = './xapian_db';\n\n  const SETTINGS_MYSQL_HOST = 'localhost';\n  const SETTINGS_MYSQL_USER = 'root';\n  const SETTINGS_MYSQL_PASS = 'root';\n  const SETTINGS_MYSQL_DB = 'demo';\n  const SETTINGS_MYSQL_TABLE = 'demo';\n\n  const DEFAULT_COUNT = 10;\n\n  private $mysql_link;\n  private $category_cache;\n\n  private $xapian_read_db;\n  private $xapian_write_db;\n  private $xapian_stemmer;\n  private $xapian_indexer;\n  private $xapian_enquire;\n\n  private function xapian_init_readonly() {\n    try{\n      $this->xapian_read_db = new XapianDatabase(self::SETTINGS_XAPIAN_DB);\n      $this->xapian_stemmer = new XapianStem(\"english\");\n      $this->xapian_enquire = new XapianEnquire($this->xapian_read_db);\n    } catch(Exception $e) {\n      throw new Exception('Could initialize Xapian: ' . $e->getMessage());\n    }\n  }\n\n  private function xapian_init_writable() {\n    try{\n      $this->xapian_write_db = new XapianWritableDatabase(self::SETTINGS_XAPIAN_DB, Xapian::DB_CREATE_OR_OPEN);\n      $this->xapian_indexer = new XapianTermGenerator();\n      $this->xapian_stemmer = new XapianStem(\"english\");\n      $this->xapian_indexer->set_stemmer($this->xapian_stemmer);\n    } catch(Exception $e) {\n      throw new Exception('Could initialize Xapian: ' . $e->getMessage());\n    }\n  }\n\n  private function mysql_init() {\n    $this->mysql_link = mysql_connect(self::SETTINGS_MYSQL_HOST, self::SETTINGS_MYSQL_USER, self::SETTINGS_MYSQL_PASS);\n    if (!$this->mysql_link) {\n      throw new Exception('Could not connect: ' . mysql_error());\n    }\n\n    $db_selected = mysql_select_db(self::SETTINGS_MYSQL_DB, $this->mysql_link);\n    if (!$db_selected) {\n      throw new Exception('Can't use db : ' . mysql_error());\n    }\n  }\n\n  /**\n   * Index method\n   *\n   */\n  public function index($params) {\n    $this->xapian_init_writable();\n    $this->mysql_init();\n\n    $start = microtime(true);\n\n    $response = new stdClass();\n    $response->indexed = array();\n\n    $offset = (isset($params['offset'])) ? intval($params['offset']) : 0;\n    $count = (isset($params['count'])) ? intval($params['count']) : self::DEFAULT_COUNT;\n    $sql = 'SELECT * FROM '.self::SETTINGS_MYSQL_TABLE.' LIMIT ' . $offset . ', ' . $count . ';';\n\n    $result = mysql_query($sql);\n\n    if (!$result) {\n      throw new Exception('Invalid query: ' . mysql_error());\n    }\n\n    $this->xapian_write_db->begin_transaction();\n\n    while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {\n       $response->indexed[] = $this->index_row($row);\n    }\n\n    $this->xapian_write_db->commit_transaction();\n    mysql_free_result($result);\n    mysql_close($this->mysql_link);\n\n    return $response;\n  }\n\n\n  private function index_row($row) {\n    $doc = new XapianDocument();\n\n    $this->xapian_indexer->set_document($doc);\n    $this->xapian_indexer->index_text($row['name'],50);\n    $this->xapian_indexer->index_text($row['summary'], 1);\n\n    $GUID = self::XAPIAN_PREFIX_UID . $row['unique_key'];\n    $doc->add_term($GUID);\n\n    $doc->add_value(self::XAPIAN_FIELD_URL, $row['url']);\n    $doc->add_value(self::XAPIAN_FIELD_DATE, date('Ymd', strtotime($row['date'])));\n    $doc->add_value(self::XAPIAN_FIELD_UID, $row['unique_key']);\n    $doc->add_value(self::XAPIAN_FIELD_NAME, $row['name']);\n    $doc->add_value(self::XAPIAN_FIELD_SUMMARY, $row['summary']);\n\n    $this->xapian_write_db->replace_document(strval($GUID), $doc);\n\n    $row_response = array();\n    $row_response['name'] = $row['name'];\n    $row_response['guid'] = $row['unique_key'];\n    $row_response['url'] = $row['url'];\n    return $row_response;\n  }\n\n  /**\n   * Delete method\n   *\n   */\n  public function delete($params) {\n    $this->xapian_init_writable();\n\n    $this->xapian_write_db->begin_transaction();\n\n    $response = array();\n\n    foreach($params['items'] as $param_guid) {\n      $GUID = self::XAPIAN_PREFIX_UID . $param_guid;\n      $this->xapian_write_db->delete_document(strval($GUID));\n      $response[] = $param_guid;\n    }\n\n    $this->xapian_write_db->commit_transaction();\n    return $response;\n  }\n\n  /**\n   * Search method\n   *\n   */\n  public function search($params) {\n    $this->xapian_init_readonly();\n\n    $start = microtime(true);\n\n    // queries array to later construct full query\n    $arr_queries = array();\n\n    // from date\n    if(!empty($params['date_from'])) {\n      $arr_queries[] = new XapianQuery(XapianQuery::OP_VALUE_GE, 6, date('Ymd', strtotime($params['date_from'])));\n    }\n\n    // to date\n    if(!empty($params['date_to'])) {\n      $arr_queries[] = new XapianQuery(XapianQuery::OP_VALUE_LE, 6, date('Ymd', strtotime($params['date_to'])));\n    }\n\n    // unique key\n    if(!empty($params['unique_key'])) {\n      $arr_queries[] = new XapianQuery(self::XAPIAN_PREFIX_UID . $params['unique_key']);\n    }\n\n    // normal search query parsed\n    if(!empty($params['search'])) {\n      $qp = new XapianQueryParser();\n      $qp->set_stemmer($this->xapian_stemmer);\n      $qp->set_database($this->xapian_read_db);\n      $qp->set_stemming_strategy(XapianQueryParser::STEM_SOME);\n      $arr_queries[] = $qp->parse_query($params['search']);\n    }\n\n    // Find the results for the query.\n        // construct final query\n    $query = array_pop($arr_queries);\n\n    foreach($arr_queries as $sq) {\n      $query = new XapianQuery(XapianQuery::OP_AND, $query, $sq);\n    }\n    $this->xapian_enquire->set_query($query);\n\n    // set the count to the specified params\n    $offset = (isset($params['offset'])) ? intval($params['offset']) : 0;\n    $count = (isset($params['count'])) ? intval($params['count']) : self::DEFAULT_COUNT;\n    $matches = $this->xapian_enquire->get_mset($offset, $count);\n\n    $response = new stdClass();\n    $response->result_count = $matches->get_matches_estimated();\n    $results = array();\n\n    $i = $matches->begin();\n    while (!$i->equals($matches->end())) {\n      $m = array();\n\n      $n = $i->get_rank() + 1;\n      $doc = $i->get_document();\n\n      $m['position'] = $n;\n      $m['url'] = $doc->get_value(self::XAPIAN_FIELD_URL);\n      $m['name'] = $doc->get_value(self::XAPIAN_FIELD_NAME);\n      $m['summary'] = $doc->get_value(self::XAPIAN_FIELD_SUMMARY);\n      $m['date'] = $doc->get_value(self::XAPIAN_FIELD_DATE);\n      $m['unique_key'] = $doc->get_value(self::XAPIAN_FIELD_UID);\n      $m['percent'] = $i->get_percent();\n\n      $results[count($results)] = $m;\n      $i->next();\n    }\n\n    $response->results = $results;\n    $end = microtime(true);\n\n    // runtime info\n    $response->execute = new stdClass();\n    $response->execute->call = 'search';\n    $response->execute->offset = $offset;\n    $response->execute->count = $count;\n    $response->execute->start = $start;\n    $response->execute->end = $end;\n    $response->execute->time = $end - $start;\n\n    // debug stuff\n    $response->execute->debug = $query->get_description();\n\n    return $response;\n  }\n}\n</coolcode>\n<strong>index.php</strong>\n<coolcode lang=\"php\">\n<?php\n\nrequire_once 'XapianWrapper.php';\n\n$x = new XapianWrapper();\n$res = $x->index(array());\nprint_r($res);\n</coolcode>\n<b>Search.php</b>\n<coolcode lang=\"php\">\n<?php\n\nrequire_once 'XapianWrapper.php';\n\n$x = new XapianWrapper();\n$params = array('search' => 'foo');\n$res = $x->search($params);\nprint_r($res);\n</coolcode>\ndelete.php\n<coolcode lang=\"php\">\n\n<?php\n\nrequire_once 'XapianWrapper.php';\n$x = new XapianWrapper();\n$params = array(\n\t'items' => array('foo'),\n);\n$res = $x->delete($params);\nprint_r($res);\n\n</coolcode>\n<strong>使用示例:</strong>\n您下载刚才的源码包后,就可以导入db.sql,并在命令里运行程序;\n<coolcode >\n\nbash$ php index.php\nstdClass Object\n(\n    [indexed] => Array\n        (\n            [0] => Array\n                (\n                    [name] => foo\n                    [guid] => foo\n                    [url] =>\n                )\n\n            [1] => Array\n                (\n                    [name] => bar\n                    [guid] => bar\n                    [url] =>\n                )\n\n        )\n\n)\nbash$ php search.php\nstdClass Object\n(\n    [result_count] => 2\n    [results] => Array\n        (\n            [0] => Array\n                (\n                    [position] => 1\n                    [url] =>\n                    [name] => foo\n                    [summary] => foo bar test\n                    [date] => 20081105\n                    [unique_key] => foo\n                    [percent] => 100\n                )\n\n            [1] => Array\n                (\n                    [position] => 2\n                    [url] =>\n                    [name] => bar\n                    [summary] => test foo bar\n                    [date] => 20091105\n                    [unique_key] => bar\n                    [percent] => 50\n                )\n\n        )\n\n    [execute] => stdClass Object\n        (\n            [call] => search\n            [offset] => 0\n            [count] => 10\n            [start] => 1256674866.79\n            [end] => 1256674866.79\n            [time] => 0.000944852828979\n            [debug] => Xapian::Query(Zfoo:(pos=1))\n        )\n\n)\nbash$ php delete.php\nArray\n(\n    [0] => foo\n)\nbash$ php search.php\nstdClass Object\n(\n    [result_count] => 1\n    [results] => Array\n        (\n            [0] => Array\n                (\n                    [position] => 1\n                    [url] =>\n                    [name] => bar\n                    [summary] => test foo bar\n                    [date] => 20091105\n                    [unique_key] => bar\n                    [percent] => 100\n                )\n\n        )\n\n    [execute] => stdClass Object\n        (\n            [call] => search\n            [offset] => 0\n            [count] => 10\n            [start] => 1256674876.02\n            [end] => 1256674876.02\n            [time] => 0.000872850418091\n            [debug] => Xapian::Query(Zfoo:(pos=1))\n        )\n\n)\n</coolcode>\n接下来,扩展您自己的程序来满足您的各种需求吧,欢迎反馈.好好地享受检索的乐趣吧.","postDate":"2010-04-18 22:04:34","postId":1054,"type":"post","status":"publish","imported":true,"file":"1054.md"}