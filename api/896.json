{"title":"缓慢的drop table 操作","zzzContent":"原文地址:<a title=\"http://www.mysqlperformanceblog.com/2009/06/16/slow-drop-table/\" href=\"http://www.mysqlperformanceblog.com/2009/06/16/slow-drop-table/\" target=\"_blank\">http://www.mysqlperformanceblog.com/2009/06/16/slow-drop-table/</a>\n\n大家都知道,Ext3并不是最有效的文件系统，例如，删除文件会非常缓慢(那真是一个痛苦的过程，不是吗老兄?)，造成大量的随机I / O。然而事实上,有时候它比你想象的更能影响MySQL的性能。那么，什么时候会发生，又为什么会发生呢?\n\n当您运行<code>DROP TABLE</code>时,会有好几件事情需要去做:对表进行write lock,这样它不会被其他线程使用;存储引擎删除数据文件;当然,最后MySQL会删除表定义文件（.frm文件）。这还不是所有的事，还有另外一件事需要去做：\n<div><span id=\"lcode-1\"><a href=\"http://www.mysqlperformanceblog.com/2009/06/16/slow-drop-table/#\">代码:</a></span></div>\n<div>\n<div id=\"code-1\">\n<div>\n<ol>\n\t<li style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: #3a6a8b;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">VOID(pthread_mutex_lock(&amp;LOCK_open));</div></li>\n\t<li style=\"font-weight: bold; color: #26536a;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">error= mysql_rm_table_part2(thd, tables, if_exists, drop_temporary, 0, 0);</div></li>\n\t<li style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: #3a6a8b;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">pthread_mutex_unlock(&amp;LOCK_open);</div></li>\n</ol>\n</div>\n</div>\n</div>\n这整段删除表操作的代码都被<code>LOCK_open</code>互斥信号量所包围。这个互斥信号量在MySQL中不少地方都用到过,但主要是表在开启或关闭的时候。这意味着，当<code>LOCK_open</code>锁定时，没有查询语句可以执行，因为他们阻止任何访问。\n\n这就解释了在ext3文件系统上删除10GB的文件何时成为了痛苦的等待的开始。删除10GB的文件将持续一段时间，如果这是一个MySQL表,这段时间mutex里将会一直存在,而这个互斥会拖延所有查询。\n<div><span id=\"lcode-2\"><a href=\"http://www.mysqlperformanceblog.com/2009/06/16/slow-drop-table/#\">纯文字</a></span></div>\n<div><span>代码：</span>\n<div id=\"code-2\">\n<div>\n<ol>\n\t<li style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: #3a6a8b;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">+-----+------+-----------+------+---------+------+ ----------------+--------------------------------- ---------------+</div></li>\n\t<li style=\"font-weight: bold; color: #26536a;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">| Id | User | Host | db | Command | Time | State | Info |</div></li>\n\t<li style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: #3a6a8b;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">+-----+------+-----------+------+---------+------+ ----------------+--------------------------------- ---------------+</div></li>\n\t<li style=\"font-weight: bold; color: #26536a;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">| 1 | root | localhost | test | Query | 7 | NULL | drop table large_table |</div></li>\n\t<li style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: #3a6a8b;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">| 329 | root | localhost | test | Query | 7 | Opening tables | select sql_no_cache * from other_table limit 1 |</div></li>\n\t<li style=\"font-weight: bold; color: #26536a;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">+-----+------+-----------+------+---------+------+ ----------------+--------------------------------- ---------------+</div></li>\n</ol>\n</div>\n</div>\n</div>\n我尝试了一些替代的办法，让MySQL来在<code>DROP TABLE</code>时删除小文件，以尽量减少影响，如：\n<ul>\n\t<li>TRUNCATE TABLE large_table; ALTER TABLE large_table ENGINE=…; DROP TABLE large_table;</li>\n\t<li>TRUNCATE TABLE large_table; OPTIMIZE TABLE large_table; DROP TABLE large_table;</li>\n</ul>\n不幸的是，原来所有管理指令：<code>ALTER TABLE</code> &lt;ALTER <code>ALTER TABLE</code>或<code>OPTIMIZE TABLE</code>实际都一样，或是在旧的表文件删除时使用了其他的LOCK_open互斥信号锁。\n<div><span id=\"lcode-3\"><a href=\"http://www.mysqlperformanceblog.com/2009/06/16/slow-drop-table/#\">纯文字</a></span></div>\n<div><span>代码：</span>\n<div id=\"code-3\">\n<div>\n<ol>\n\t<li style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: #3a6a8b;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">| 3 | root | localhost | test | Query | 7 | rename result table | ALTER TABLE large_table ENGINE=MyISAM |</div></li>\n\t<li style=\"font-weight: bold; color: #26536a;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">| 679 | root | localhost | test | Query | 6 | Opening tables | select * from other_table limit 1 |</div></li>\n</ol>\n</div>\n</div>\n</div>\n唯一的选择似乎就只能是改变文件系统了。例如,换成处理文件删除更有效的XFS文件系统。\n\n<strong><span style=\"color: blue;\">EXT3</span></strong>\n<div><span id=\"lcode-4\"><a href=\"http://www.mysqlperformanceblog.com/2009/06/16/slow-drop-table/#\">纯文字</a></span></div>\n<div><span>代码：</span>\n<div id=\"code-4\">\n<div>\n<ol>\n\t<li style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: #3a6a8b;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">mysql&gt; drop table large_table;</div></li>\n\t<li style=\"font-weight: bold; color: #26536a;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">Query OK, 0 rows affected (7.44 sec)</div></li>\n</ol>\n</div>\n</div>\n</div>\n<strong><span style=\"color: blue;\">的xfs</span></strong>\n<div><span id=\"lcode-5\"><a href=\"http://www.mysqlperformanceblog.com/2009/06/16/slow-drop-table/#\">纯文字</a></span></div>\n<div><span>代码：</span>\n<div id=\"code-5\">\n<div>\n<ol>\n\t<li style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: #3a6a8b;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">mysql&gt; drop table large_table;</div></li>\n\t<li style=\"font-weight: bold; color: #26536a;\">\n<div style=\"font-family: 'Courier New',Courier,monospace; font-weight: normal;\">Query OK, 0 rows affected (0.29 sec)</div></li>\n</ol>\n</div>\n</div>\n</div>\n一个MySQL的内部操作可能更好一点:可以通过先重命名对应的数据文件，再在没有互斥信号锁的情况下删除物理文件。但是事实上可能没有那么简单,因为实际的删除操作是由存储引擎来完成的，因此不是MySQL的代码能控制的。\n\n<span style=\"text-decoration: line-through;\">这肯定不是一个共同的情况，但是有时候(虽然我们极其不愿)确实可能会让任何人头痛（例如,删除一个老的不再使用的表） 。</span>\n\n这里绍明同学说应该翻译成:<span style=\"font-size: small;\"><span style=\"color: #000000;\"><span style=\"font-family: 宋体;\">这不是一个常见的情况，但是它可能会在最不期望出现的时候成为一个问题（例如　删除没有使用的旧表）．\n</span></span></span>\n\n<hr />\n<strong>后附:</strong>\n\n一个评论回复说:\n<blockquote>从一个完全不同的领域的解决办法。\n\nmythtv （电视记录系统）开发者们在ext3系统上删除大型文件时，通过“缓慢删除”功能取得更好的效果。一般来说，电视录音大概1 - 12GB每小时，所以一部电影可以20 + GB大小的文件。如果没有该功能，删除文件操作将锁定ext3整个系统约20-30秒。\n\n“慢删除”只是在后台执行将文件中的块清空的操作。</blockquote>\n另一个评论说:\n<blockquote>我应该指出，这并不只适用于MyISAM表，对于InnoDB表，在innodb_file_per_table模式下也一样。\n我最近刚跟客户做了个spoke,他们几乎无法删掉一个400G的表，因为这个操作阻塞了很长时间。。</blockquote>","postDate":"2009-06-22 23:26:09","postId":896,"type":"post","status":"publish","imported":true,"file":"896.md"}