{"title":"php-APC介绍","zzzContent":"前面几篇文章提到了APC.很多人问我:APC是什么?这里做个比较全面的介绍:\nAPC,全称是Alternative PHP Cache,官方翻译叫\"可选PHP缓存\",但我个人觉得应该叫\"另一个PHP缓存\".因为这个东西如果叫\"可选PHP缓存\",容易给人一种可要可不要的,不怎么有用的错觉.\nAPC的主页是:&lt;a href=\"http://pecl.php.net/package/apc\" mce_href=\"http://pecl.php.net/package/apc\"&gt;http://pecl.php.net/package/apc&lt;/a&gt;.目前的版本是3.0.14,通过PECL安装,需要php4.3.0或更高版本.\n&lt;b&gt;APC的安装:&lt;/b&gt;\n一般是下载源代码然后phpize来编译安装,安装完以后在加上php.ini里加上\n&lt;coolcode&gt;\nextension=apc.so\n&lt;/coolcode&gt;\n这么一行就行了.\n&lt;b&gt;APC的使用&lt;/b&gt;\nAPC的使用其实倒说不上.APC是个优化器,自安装之日起,就默默地在后台为您的PHP应用服务了.您的所有PHP代码会被缓存起来.\n\n另外,APC可提供一定的内存缓存功能.但是这个功能并不是十分完美,有报告说如果频繁使用APC缓存的写入功能,会导致不可预料的错误.如果想使用这个功能,可以看看apc_fetch,apc_store等几个与apc缓存相关的函数.\n从PHP5.2开始,APC引入了一个小甜饼,解决了困扰大家已久的大文件上传的进度条问题.具体请看看我这篇&lt;a href=\"http://www.162cm.com/archives/406.html\" mce_href=\"http://www.162cm.com/archives/406.html\"&gt;blog&lt;/a&gt;.\n&lt;b&gt;APC的高级使用&lt;/b&gt;\n1.缓存期限:\nAPC的缓存分两部分:系统缓存和用户数据缓存.\n系统缓存是自动使用的,是指APC把PHP文件源码的编译结果缓存起来,然后在再次调用时先对比时间标记。如果未过期,则使用缓存代码运行。默认缓存3600s(一小时).但是这样仍会浪费大量CPU时间.因此可以在php.ini中设置system缓存为永不过期(apc.ttl=0).不过如果这样设置,改运php代码后需要restart一下您的web服务器(比如apache...).目前对APC的性能测试一般指的是这一层cache;\n用户数据缓存由用户在编写php代码时用apc_store和apc_fetch函数操作读取、写入的.如果量不大的话我建议可以使用一下.如果量大,我建议使用memcache会更好.\n如果要享受APC带来的缓存大文件上传进度的特性,需要在php.ini中将apc.rfc1867设为1,并且在表单中加一个隐藏域APC_UPLOAD_PROGRESS,这个域的值可以随机生成一个hash,以确何唯一.具体例子请参见前面给出的链接.\n2.状态控制和分析:\nAPC的源码包自带了一个apc.php;您可以将这个文件上传到web服务器的某个目录下,用浏览器访问,这会显示当前的状态.我们可以从这里的表格分析当前的缓存状况,作出进一步优化.\n<a href=\"http://www.162cm.com/wp-content/uploads/2007/08/apc-info-clublocalhost2.png\" title=\"apc-info-clublocalhost2.png\"><img src=\"http://www.162cm.com/wp-content/uploads/2007/08/apc-info-clublocalhost2.png\" alt=\"apc-info-clublocalhost2.png\" /></a>\n这是某test站点的状态.您可以慢慢分析,这个工具会提供很多有用的工具.比如您可以看到哪些文件经常被包含(访问),您缓存的哪个变量经常被读取,或经常被更新等.\n最后顺便提一句,有独立报告说,APC的代码缓存、优化效果要高出zend优化器.就算不是真的,他开源而又免费,实在是一个相当不错的选择.","postDate":"2007-08-14 22:20:40","postId":451,"type":"post","status":"publish","imported":true,"file":"451.md"}