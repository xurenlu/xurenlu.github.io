{"title":"php高手之路之---纵横天下","zzzContent":"想想,当您感觉到自己的已经非常牛X的时候,肯定想着自己写一个wordpress,或是discuz了.现在您开始考虑,如何架构一个国际化的(多语言)的程序了。\n学会用不同的语言与不同的对手打交道,是纵横天下第一重要的事.\n如何开始呢?\n我所了解的有三种方案:\n方案一:利用模板引擎,每一种语言,制做一套模板.选中不同的模板,就等于选用了不同的语言.模板引擎这玩意儿是已经被我批得不成样子了,因为php本身就是相当不错的模板.不过还是很多人用。您可以尝试smarty,phplib,fast template等。另外国内也有不少人自行开发模板引擎。一年以前，我也是他们中的一员。\n方案二:不同的语言包含不同的文件。把要翻译的语句放在单独的文件中,选用不同语言时,require或是include不同的文件。例如:\n<coolcode></coolcode>\n$lang=\"en_US\";\nrequire(\"lang/$lang/lang.php\");\necho $msg[\"WELCOME\"];\n?&gt;\n\n而lang/en_US/lang.php中可能是:\n<coolcode></coolcode>\n<!--p<-->$msg[\"WELCOME\"]=\"Welcome to ...\";\n?&gt;\n\n要改成中文,需要添加lang/zh_CN/lang.php文件：\n<coolcode></coolcode>\n<!--p<-->$msg[\"WELCOME\"]=\"欢迎来到...\";\n?&gt;\n\n对应的把文件中的代码改为下面的就行了:\n<coolcode></coolcode>\n<!--p<-->$lang=\"zh_CN\";\nrequire(\"lang/$lang/lang.php\");\necho $msg[\"WELCOME\"];\n?&gt;\n\n目前大部分的程序,使用这种方法来达到国际化,多语种.比如Xoops.不过xoops在语言包文件中不是用数组来存储翻译的词语的,而是用Define(\"MSG_WELCOME\",\"欢迎来到...\")来存储的。这个是为了速度能更快.数组和常量存储的方式不一样.\n但这样做的缺点也不言而喻。因为,您至少需要做一个语言包(一般而言是英文)而且需要记住那些词条名,比如MSG_WELCOME,MSG_REGISTER_SUCCESS等等.在程序中出现在就是MSG_WELCOME,MSG_REGISTER_SUCCESS这些不易看懂的内容,一旦您的语言包中缺少这一条,显示的就是空的,啥也没有.\n方案三:使用Gnu\nGetText方案.Gnu程序中推荐的是使用GetText函数.这个最初是在C语言中出现的。但是现在php中也有了gettext函数了.Wordpress中就是使用的这种方案.\n看看其步骤.\n第一步:\n使用一个函数将您的字串包起来.您的程序应该写成这样子:\n<coolcode></coolcode>\n<!--p<-->//file:test.php\necho __(\"I am Mr Wung\");\nfunction __($msgid)\n{\nreturn $msgid;\n}\n?&gt;\n\n您目前可以加上__($msg)函数的定义，函数可以直接返回msg本身.\n第二步:生成语言文件:\n(在linux中)运行 xgettext --keyword=__\ntest.php,完成后将会生成一个messages.po文件。内容如下:\n<coolcode></coolcode>\n# SOME DESCRIPTIVE TITLE.\n# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER\n# This file is distributed under the same license as the PACKAGE package.\n# FIRST AUTHOR <email@address></email@address>, YEAR.\n#\n#, fuzzy\nmsgid \"\"\nmsgstr \"\"\n\"Project-Id-Version: PACKAGE VERSIONn\"\n\"Report-Msgid-Bugs-To: n\"\n\"POT-Creation-Date: 2007-03-20 11:44+0800n\"\n\"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONEn\"\n\"Last-Translator: FULL NAME <email@address></email@address>n\"\n\"Language-Team: LANGUAGE <ll@li.org></ll@li.org>n\"\n\"MIME-Version: 1.0n\"\n\"Content-Type: text/plain; charset=CHARSETn\"\n\"Content-Transfer-Encoding: 8bitn\"\n\n#: test.php:3\nmsgid \"I am Mr Wung\"\nmsgstr \"\"\n\n您看到了,messages.po中已经把程序中所有用__函数包起来的字符串找出来了。现在您编辑它，将最后一行中的msgstr\n\"\"改为msgstr \"我是王先生\";将倒数第六行中的charset=CHARSET改为charset=UTF-8;\n现在再运行msgfmt\nmessages.po,将会在当前路径生成一个messages.mo文件.这个文件是编译以后的二进制文件,因为messages.po文件用来搜索字符串太慢了.\n有了这个文件以后，__()函数就可以在messages.mo文件中进行查找,如果找到了对应的字符串,则可以给出翻译,如果找不到,就会直接返回它本身.而且,您用vim,editplus或是其他文件打开test.php文件,也能从echo __(\"I am Mr Wung\")看出这一句是什么用途.相比之下,Xoops方式的echo MSG_I_AM_MR_WUNG;就晦涩多了.\n至于__()函数,其实是一个别名,它实际调用了gettext函数.这个函数,在Wordpress中已经给出,是一个open项目.","postDate":"2007-04-03 02:01:29","postId":394,"type":"post","status":"publish","imported":true,"file":"394.md"}