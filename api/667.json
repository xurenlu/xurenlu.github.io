{"title":"Perl常见错误[2]","zzzContent":"常见错误之七:\n在面向对象的编程中，错误地调用类内部函数。\n以代码作为例子:\nerr.pl文件:\n<coolcode>\n#! /usr/bin/perl -I./ -w\nuse module;\nmy $var=module->new();\nprint \"call1:n\";\n$var->call();\nprint \"call2:n\";\n$var->call2();\nprint \"ncall3:n\";\n$var->call3();\n</coolcode>\n下面是module.pm:\n<coolcode>\npackage  module;\n\nsub new {\n\tmy $self={};\n\tbless $self;\n\treturn $self;\n}\nsub call {\n\tmy ($self)=@_;\n\t$self->_call(\"something as an Argument\");\n}\nsub call2 {\n\tmy ($self)=@_;\n\t_call($self,\"something as an Argument\");\n}\nsub call3 {\n\tmy ($self)=@_;\n\t_call(\"something as an Argument\");\n}\nsub _call {\n\tmy\t($self,$arg) = @_;\n\tif($arg)\n\t{\n\t\tprint \"yes ,We got an argument!n\";\n\t}\n\tprint \"self:\".$self.\"n\";\n}\n1;\n</coolcode>\n现在我们运行err.pl:\n<coolcode>\nrenlu@localhost$ chmod +x err.pl\nrenlu@localhost$ ./err.pl\n</coolcode>\n输出的结果是:\n<coolcode>\ncall1:\nyes ,We got an argument!\nself:module=HASH(0x1f85e88)\ncall2:\nyes ,We got an argument!\nself:module=HASH(0x1f85e88)\n\ncall3:\nself:something as an Argument\n\n</coolcode>\n第一第二个执行结果一样，第三个不一样?这也很容易让程序出错。我今天下午调了一下午 最后发现是这个原因。特地记录一下。","postDate":"2008-07-18 00:50:16","postId":667,"type":"post","status":"publish","imported":true,"file":"667.md"}