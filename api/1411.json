{"title":"Drill: Hive 插件","zzzContent":"Drill 1.1 及后续的版本支持Hive 1.0;要使用Hive的自定义SerDes或是输入格式、输出格式来访问Hive 的表，所有的Drill节点必须在Drill安装目录的jars/3rdparty 目录下放上Hive的SerDes或是输入格式，输出格式的Jar包。\n\n你可以通过选择WEB办控制台里的\"Storage\" tab来更新Hive配置。从禁用的手件列表里， 点击\"hive\"后面的\"Update\"按钮。Hive默认的插件的配置应当像下面这样：\n\n<pre><code>{\n      \"type\": \"hive\",\n      \"enabled\": false,\n      \"configProps\": {\n        \"hive.metastore.uris\": \"\",\n        \"javax.jdo.option.ConnectionURL\": \"jdbc:derby:;databaseName=../sample-data/drill_hive_db;create=true\",\n        \"hive.metastore.warehouse.dir\": \"/tmp/drill_hive_wh\",\n        \"fs.default.name\": \"file:///\",\n        \"hive.metastore.sasl.enabled\": \"false\"\n      }\n    }\n\n</code></pre>\n\n<h2>Drill连接到Hive的远程元数据</h2>\n\nHive的元数据是在Hive之外做为一个独立服务存的的。Drill可以能冠军Thrift来访问元数据。元数据和Hive数据库是通过JDBC来交互的。\n\n按照这一章后面的步骤来将Drill指向到Hive的元数据服务的地址。在Hive 插件的配置中，设定Connection参数，来给Drill提供一个connection。在这里，如果你并不是通过HBaseStorageHandler来查询Hive 表的，你就已经完成配置了；如果你通过HBaseStorageHandler来查询Hive表，你需要配置Zookeeper quorum 和port这两个属性，因为HBaseStorageHandler需要这两个参数。Drill也使用这些参数来发现HBase 服务。如果你使用HBase 插件，请在Hive插插和HBase 插件里使用相同的Zookeeper quorum 和port 参数（如果你想要Hive 查询访问和HBase一样的源的话）。\n\n<strong>注意，请确认你在注册Hive的元数据的时候，Hive元数据服务已经跑起来了。</strong>\n\n<h3>Hive 远程元数据配置</h3>\n\n要连接Drill到一个Hive 远程元数据：\n\n<ol>\n<li>在hive.metastore.uris配置项里指定的系统上执行这个命令:</li>\n</ol>\n\n<code>hive --service metastore</code>\n\n<ol>\n<li>在Drill的Web控制台上，点选 \"Storage\" 标签页。</li>\n</ol>","postDate":"2017-04-04 16:03:58","postId":1411,"type":"post","status":"publish","imported":true,"file":"1411.md"}