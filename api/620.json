{"title":"Rails中如何构建rss feed输出","zzzContent":"在网上Google了很多次,能找到用rails制作rss,但是总是找不到完整的。今天把完整的过程抄录在这里:\n<or>\n<li>\n方法A:\n    就是你自己把RSS XML的格式拼凑好,输出.并设置HTTP Header ，标记content-type为application/XML,常见的代码:\n        <coolcode>\n                #Post_controller::feed()\n          def feed\n                                                require \"rss\"\n                                                articles = Article.find :all, :order => 'post_date DESC', :limit => 10\n                                                feed = RSS::Maker.make(\"2.0\") do |maker|\n                                                        maker.channel.title = \"Gang of Technology\"\n                                                        maker.channel.description = \"Gang of Technology site\"\n                                                        maker.channel.link = \"http://up-u.com\"\n\n                                                        maker.items.do_sort = true\n\n                                                        articles.each do |article|\n                                                                item = maker.items.new_item\n                                                                item.link = \"http://www.162cm.com/archives/#{article.id}\"\n                                                                item.title = article.title\n                                                                item.date = article.post_date\n                                                                item.description = \"\"\n                                                        end\n                                                end\n                                                send_data feed.to_s, :type => \"application/rss+xml\", :disposition =>\n                                'inline'\n    end\n        </coolcode>\n</li>\n<li>\n        方法B:\n        Rails Controller->Action 代码:\n        <coolcode>\n        #Post_controller::feed\n        def feed\n                @posts=Post.find :all,:limit=>\"id desc\"\n        end\n        <coolcode>\n        erb模板:\n        <coolcode>\n        xml.instruct!\nxml.rss(\"version\"=>\"2.0\",\n    \"xmlns:dc\"=>\"http://purl.org/dc/elements/1.1/\") do\n  xml.channel do\n    xml.title \"renlu.xu 's blog\"\n    xml.link(url_for(:action=>\"start\",:only_path=>false))\n    xml.description \"My life My love\"\n    xml.language \"zh_CN\"\n    xml.ttl 60\n\n    for event in @posts do\n      xml.item do\n        xml.title(event.title)\n        xml.description(event.body)\n        xml.pubDate(event.created_at.to_s(:rfc822))\n        xml.guid(event.id)\n        xml.link(\"http://.....#{event.id}\")\n      end\n    end\n  end\nend\n        </coolcode>\n这种方法 网上很多文章到这一步就算完了，没有下文了，其实不对。到这一步，访问http://localhost:3000/post/feed仍然是出来的html的界面。g之，找到介绍:rails 2.0会根据不同的格式对模板进行渲染。这段代码放在/views/post/feed.rhtml中是没有用的，需要放在/views/post/feed.atom.builder中，并且需要通过http://localhost:3000/post/feed/123.atom(这里123没有什么实际意义  随便抓的一个),或是http://localhost:3000/post/feed?format=atom才能正确地按rss+xml输出。\n</li>\n</ol>","postDate":"2008-04-18 09:02:05","postId":620,"type":"post","status":"publish","imported":true,"file":"620.md"}