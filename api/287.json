{"title":"PHP读取BT文件的代码之改进版","zzzContent":"今天再看了一下bt文件的具体编码方式 ，又改进了一下代码，几乎是重写了，这次能读入所有信息到数组了，并且字典中的数组进行了一些配对。\n<coolcode lang=\"php\">\n<?php\n\t$file=\"铁血.torrent\";\n\t$fp=fopen($file,\"rb\");\n\t$data=(readBt($fp));\n\t/**\n\t@author renlu xu <helloasp@hotmail.com>\n\t输出读入的数组。\n\t*/\n\tprint_r($data);\n\t/**\n\t@function readbt 读入bt文件；\n\t@param $fp 文件指针\n\t@param $nowtype:当然的元数据类型\n\t@return Array 一个保存当前元数据集的数组\n\t*/\n\tfunction readBt($fp,$nowtype=\"DICT\")\n\t{\n\t\t$nowindex=\"\";\n\t\twhile(!feof($fp))\n\t\t{\n\t\t\t$char=(string)fread($fp,1);\n\t\t\t/**\n\t\t\t其实仔细研究一下，可能这里几个case的摆放位置，比如哪个在前哪个在后，对速度都是有影响的，不过咱们暂时不管它\n\t\t\t*/\n\t\t\tswitch($char)\n\t\t\t{\n\t\t\t\tcase \"1\":\n\t\t\t\tcase \"2\":\n\t\t\t\tcase \"3\":\n\t\t\t\tcase \"4\":\n\t\t\t\tcase \"5\":\n\t\t\t\tcase \"6\":\n\t\t\t\tcase \"7\":\n\t\t\t\tcase \"8\":\n\t\t\t\tcase \"9\":\n\t\t\t\tcase \"0\":\n\t\t\t\t{\n\t\t\t\t\t$nowindex.=$char;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \":\":\n\t\t\t\t{\n\t\t\t\t\t$nowtype=\"STRING\";\n\t\t\t\t\t$string=fread($fp,intval($nowindex));\n\n\t\t\t\t\t$VARS[]=$string;\n\t\t\t\t\t$nowindex=\"\";\n\t\t\t\t\t$nowtype=\"\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"i\":\n\t\t\t\t{\n\n\t\t\t\t\t$nowtype=\"NUMBER\";\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t\tcase \"e\":\n\t\t\t\t{\n\t\t\t\t\t/**\n\t\t\t\t\te是一个编码结束的标志，要看当前是何种编码。如果是number,直接保存当前读入的一系统数组；如果是列表（list）或字典(dictionary),则返回数组。\n\t\t\t\t\t*/\n\n\t\t\t\t\tswitch ($nowtype)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase \"NUMBER\":\n\n\t\t\t\t\t\t\t$VARS[]=intval($nowindex);\n\t\t\t\t\t\t\t$nowindex=\"\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"LIST\":\n\n\t\t\t\t\t\t\treturn $VARS;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"DICT\":\n\n\t\t\t\t\t\t\treturn $VARS;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t当开始一个列表或字典时，我为了让结果数组更清晰地显示目录关系，使用了递归。也可以不使用递归。\n\t\t\t\t*/\n\t\t\t\tcase \"l\":\n\t\t\t\t\t{\n\t\t\t\t\t$nowtype=\"LIST\";\n\t\t\t\t\t$VARS[]=readBt($fp,$nowtype);\n\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase \"d\":\n\t\t\t\t{\n\n\t\t\t\t\t$nowtype=\"DICT\";\n\t\t\t\t\t$VARS[]=readBt($fp,$nowtype);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t\treturn $VARS;\n\t}\n\tfclose($fp);\n\n\n?>\n</coolcode>\n结果还可以用函数再处理一下，不过这个就比较简单了。解析出来后，就能比较容易地读取bt文件并分析当前该种子里的文件名，发布者和节点信息。\n大学那会儿特想弄清bt文件的结构，现在知道了，反不想去细了解了。","postDate":"2006-10-21 00:25:16","postId":287,"type":"post","status":"publish","imported":true,"file":"287.md"}