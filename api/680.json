{"title":"神奇的DRb","zzzContent":"前一阵研究用spread来承载数据分发,做的报价系统很失败。今天翻翻书，发现了DRb这个分布式ruby的实现。\n一样地，直接上代码:\n<coolcode>\n#! /usr/bin/ruby\nrequire \"drb\"\nclass My\n\tdef get(arg1)\n\t\too=Hash.new\n\t\too['data']='I am your baby'\n\t\too['time']=Time.new.to_i\n\t\too['arg']=arg1\n\t\t0.upto(1000) {|i|\n\t\t\too['dbf'+i.to_s]=rand\n\t\t}\n\t\treturn oo\n\tend\nend\nm=My.new\n\nDRb.start_service('druby://localhost:9999',m)\nDRb.thread.join\n</coolcode>\n这是服务器端的，我们用ruby server.ruby & 运行它。\n接着写客户端的:\n<coolcode>\n#! /usr/bin/ruby\nrequire 'drb'\nrequire \"profile\"\nDRb.start_service()\nobj=DRbObject.new(nil,'druby://localhost:9999')\nhash=obj.get('hi,iam polly')\nputs hash.keys\nputs hash.keys.length\n</coolcode>\n然后运行ruby client.rb，我们就得到了另一个机器（例子中是同一台机器)某个进程中的一个运行结果。\n酷吧。<strong>但是实际上,DRb运行的并不快。</strong>","postDate":"2008-08-17 13:18:26","postId":680,"type":"post","status":"publish","imported":true,"file":"680.md"}