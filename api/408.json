{"title":"N早以前写的asp代码，曾广为流传的","zzzContent":"就是adodb.strem那段流传最广，很神奇呢。我那么辛苦写了个模板类，居然只有几个台湾人用，怪。\n<coolcode >\n<%\n\n’*************************************************************\n’转发时请保留此声明信息,这段声明不并会影响你的速度!\n’*************************************************************\n\n\n’*************************************************************\n’@author:                        面条\n’@realname:                        徐仁禄\n’@email:                        xurenlu@sohu.com\n’@QQ:                            55547082\n’@Homepage:                        http://www.ksdn.net\n’@版权申明:\n’            非盈利性质团体或者个人可以免费使用.\n’*************************************************************\n’   我敢担保 本程序由本人独立完成 ，没有参考他人的任何程序(参考了本人自己的php版本的template，不过那个也是本人独立完成的 .)同时本人声明  本class的所有示例版权均为本人所有，任何人或者单位实体不得随意更改\n’ 本template可免费用于：\n’            1.个人的非商业性质应用。\n’            2.公益性质团体，如红十字会，孤儿院等等\n’\n’具体使用方法请看example.asp文件.\n’\n’adSaveCreateOverWrite\n\nclass template\n    dim adSaveCreateOverWrite\n    dim adSaveCreateNotExist\n    public starttag\n    public endtag\n    public filename\n    dim  key_arr()\n    dim  val_arr()\n    public content\n    public total\n    public contenta()\n    public BlockContent ’ 块的内容(解析后的)\n    public block_begin_delim\n    public block_end_delim\n    public block_begin_word\n    public block_END_word\n    public block_null\n\nsub Class_Initialize()’  类的初始化\n redim key_arr(0)\n redim val_arr(0)\n redim contenta(0)\n adSaveCreateOverWrite=2\n adSaveCreateNotExist=1\n\n starttag=\"{\"\n endtag=\"}\"\n total=0\n block_begin_word=\"BEGIN\"\n block_end_word=\"END\"\n block_begin_delim=\"<!--\"\n block_end_delim=\"-->\"\n block_null=\" \"    ’  begin　和end之间用空格隔开\nend sub\n\n\nsub echo (a)\nresponse.write a\nend sub\n\n\nfunction readfile(filepath)\n    dim stm2\n    on error resume next\n    set stm2 =server.createobject(\"ADODB.Stream\")\n    stm2.Charset = \"gb2312\"\n    stm2.Open\n    stm2.LoadFromFile filepath\n    readfile = stm2.ReadText\nend function\n\n\nfunction writefile(filepath,str)’ 写入文件的函数\n    dim stm\n    on error resume next\n    Set stm = server.createobject(\"ADODB.Stream\")\n    stm.Charset = \"gb2312\"\n    stm.Open\n    stm.WriteText str\n    stm.SaveToFile filepath, adSaveCreateOverWrite\nend function\n\nfunction SetFile(file)’ 设置文件，读取文件内容\n    filename=file\n    content=readfile(file)\nend function\n\nfunction inarray(val,arr)’val是否在数组arr中\n    dim tmp,i,rr,re,pt,tt\n    for i =0 to ubound(arr)\n    if arr(i)=val then\n        inarray=i\n        exit function\n    end if\n    next\n    inarray=-1 ’不在数组中.\nend function\n\nfunction listarray(arr,str)\n        dim tmp,i,rr,re,pt,tt\n        str=\"   \" & str\n\n        for i=0 to ubound(arr)\n            echo str & i & \":\" & arr(i) & vbcrlf\n        next\nend function\n\nfunction NewKey(key,val) ’添加新的键值.\n      dim tmp,i,rr,re,pt,tt,pos\n    i=total\n    pos=inarray(key,key_arr)\n\n    if  pos=-1 then  ’//如果这个键值不存在.\n\n     redim Preserve key_arr(i)\n     redim Preserve val_arr(i)\n\n\n        ’echo \"key_arr(\" & i & \")=\" & key & vbcrlf\n\n        key_arr(i)=key\n        val_arr(i)=val\n        total=total+1\n    else\n        key_arr(pos)=key\n        val_arr(pos)=val\n    end if\nend function\n\n\nfunction resetKeys()’ 初始化键名数组\n    redim key_arr(0)\n    redim val_arr(0)\n    total=0\nend function\n\n\nfunction getTextContent(Tcontent)\n    dim tmp,i,rr,re,pt,tt\n’ 得到把某一个文本段的{}内容替换后的块.\n    tmp=Tcontent\n    for i=0 to total -1\n        tmp=replace(tmp & \"\",starttag & key_arr(i) & endtag, val_arr(i)& \"\" )  ’ 替换各个键值.\n    next\n    ’  替换{***}类似的东西。\n    ’  目前暂时先放一放把。\n\n    ’’\n    ’’\n    set re=new RegExp\n    re.Global=True\n    re.Ignorecase=True\n    pt=\"{([a-zA-Z0-9_]{0,100})}\"\n    re.Pattern=pt\n    set tt=re.Execute(tmp)\n\n\n    for i= 0 to tt.count -1\n    tmp=replace(tmp & \" \", tt.item(i) & \"\" ,\"\")\n    next\n    set re=nothing\n    set tt=nothing\n    ’’\n    ’’\n\n    getTextContent=tmp\nend function\n\n\nfunction getText()\n    dim tmp,i,rr,re,pt,tt\n’ 得到把某一个文本段的{}内容替换后的块.\n    tmp=content\n    for i=0 to total -1\n        tmp=replace(tmp & \"\",starttag & key_arr(i) & endtag & \"\", val_arr(i) & \"\" )  ’ 替换各个键值.\n    next\n    ’  替换{***}类似的东西。\n    ’  目前暂时先放一放把。\n\n    ’’\n    ’’\n    set re=new RegExp   ’ 这里是模式匹配的应用  有正规表达式应用高手的指导一下!\n    re.Global=True\n    re.Ignorecase=True\n    pt=\"{([a-zA-Z0-9_]{0,100})}\"\n    re.Pattern=pt\n    set tt=re.Execute(tmp)\n    for i= 0 to tt.count -1\n    tmp=replace(tmp & \"\", tt.item(i) & \"\",\"\")\n    next\n    set re=nothing\n    set tt=nothing\n    ’’\n    ’’\n\n    getText=tmp\n    content=tmp\nend function\n\n\nfunction getBlockContent(block)’ 得到模板内容中某一个块的内容\n    dim i,pos1,pos2,firststr,secondstr,tempstr\n    firstStr=\"<!-- BEGIN \" & Block & \" -->\"\n    secondStr=\"<!-- END \" & Block & \" -->\"\n    pos1=instr(content,firststr)\n    pos2=instr(content,secondstr)\n\n    if  (pos2-pos1)<=0 then\n\n    else\n\n        tempstr=mid(content,pos1,pos2-pos1)\n        tempstr=replace(tempstr,firststr,\"\")\n        tempstr=replace(tempstr,secondstr,\"\")\n                ’response.write replace(tmpstr,\"<--\",\"\")\n    end if\n    ’response.end\n\n    getBlockContent=tempstr ’ 返回该字符串.\nend function\n\n\nsub tofile(file)’ 输出到某个文件\n    dim tmp\n    tmp=gettext()\n    writefile file,content’ 输出到文件\nend sub\n\n\nfunction ParseBlock(block) ’ 到到某一个块的解析后的内容.\n    dim b,tmp\n    dim firststr,secondstr,tempstr\n    b=GetBlockContent(block) ’得到某一个块解析前的内容\n    tmp=getTextContent(b)’得到这个块解析后的内容.\n    BlockContent=BlockContent & tmp  ’ 保存起来拉 哈哈。这样就实现了重复显示某一个块.\n    firstStr=\"<!-- BEGIN \" & Block & \" -->\"\n    secondStr=\"<!-- END \" & Block & \" -->\"\n    tmp=replace(tmp,firststr,\"\")\n    tmp=replace(tmp,secondstr,\"\")\n    ParseBlock=tmp\nend function\n\nfunction replaceBlock(block)’ 把解析了几次的块的内容给替换解析了.\n    dim con,tmp\n        dim firststr,secondstr,tempstr\n\n    con=GetBlockContent(block) ’得到这个块解析前的内容.\n    tmp=replace(content & \"\",con & \"\",Blockcontent & \"\")\n    blockcontent=\"\"\n\n    firstStr=\"<!-- BEGIN \" & Block & \" -->\"\n    secondStr=\"<!-- END \" & Block & \" -->\"\n\n    tmp=replace(tmp,firststr,\"\")\n    tmp=replace(tmp,secondstr,\"\")\n\n    content=tmp\nend function\n\nfunction replaceBlockforNUll(block)’ 把解析了几次的块的内容给替换解析了.\n    dim tmp,con\n    con=GetBlockContent(block) ’得到这个块解析前的内容.\n    tmp=replace(content & \"\",con & \"\",\"\")\n    blockcontent=\"\"\n    content=tmp\nend function\n\nfunction replaceBlockfor(block,deStr)’ 把解析了几次的块的内容给替换解析了.\n    dim tmp,con\n    con=GetBlockContent(block) ’得到这个块解析前的内容.\n    tmp=replace(content & \"\",con & \"\",Dstr)\n    blockcontent=\"\"\n    content=tmp\nend function\nend class\n\n\n%>\n\n\n2、数据库结果集合操作类\n\n程序代码 程序代码\n<%\n\n’*************************************************************\n’转发时请保留此声明信息,这段声明不并会影响你的速度!\n’*************************************************************\n\n\n’*************************************************************\n’@author:                        面条\n’@realname:                        徐仁禄\n’@email:                        xurenlu@sohu.com\n’@QQ:                            55547082\n’@Homepage:                        http://www.ksdn.net\n’@版权申明:\n’            非盈利性质团体或者个人可以免费使用.\n’*************************************************************\n\n\n’*************************************************************\n’*************************************************************\n’*************************************************************\nclass Rsclass\n    private iRs\n    private isql\n    private iconn\n    private closeConn\n    private openConn\n\n’*************************************************************\n’        进行初始化，建立iconn和irs对象.\n’*************************************************************\n    Private Sub Class_initialize()\n        set iconn=server.createobject(\"adodb.connection\")\n        set irs=server.createobject(\"adodb.recordset\")\n    End Sub\n\n    public sub connect(connstr)\n        err.clear\n        on error resume next\n        iconn.open connstr\n        if err.number<>0 then response.write \"数据联接出错了.\"\n    end sub\n\n    public property let conn(connection)\n        set iconn=connection        ’通过外界传入一个数据库联接.\n    end property\n\n\n\n    Private Sub Class_Terminate()\n        on error resume next\n        irs.close\n        iconn.close\n        set iconn=nothing\n        set irs=nothing\n    End Sub\n\n’*************************************************************\n’        内容:实现统计功能,一般用select count(*) from table where id>54类似的sql语句.\n’*************************************************************\n    public function getCountBysql(sql)\n        on error resume next\n        dim count\n        count=iconn.execute(sql)(0)\n        getCountBysql=count\n        iconn.close\n    end function\n\n\n\n\n’*************************************************************\n    public function deleteBySql(sql)\n        err.clear\n        on error resume next\n        iconn.execute(sql)\n        if err.errcode<>0 then\n            deleteBysql=false\n            exit function\n        end if\n        deleteBySql=true\n    end function\n\n\n’*************************************************************\n    public function deleteByid(table,column,value)\n        err.clear\n        on error resume next\n        iconn.execute(\"delete from \"&table & \" where \"&column & \"=’\"&value & \"’\")\n        if err.errcode<>0 then\n            deleteByid=false\n            exit function\n        end if\n        deleteByid=true\n    end function\n\n\n’*************************************************************\n’        返回一个词典，用这个词典来装载要添加的对象.\n    public function getdict()\n        set getdict=server.createobject(\"scripting.dictionary\")\n    end function\n\n’*************************************************************\n’        增加新的记录.\n    public function add(obj,table)\n        dim item\n        isql=\"select * from \" & table\n        response.write isql\n        iRs.open isql,iconn,1,3\n        irs.addnew\n        for each item in obj\n            irs(item)=obj(item)\n        next\n        irs.update\n        irs.close\n    end function\n\n\n\n’*************************************************************\n’        得到查询得返回值\n    public function getquery(sql)\n        iRs.open sql,iconn,1,1\n        if irs.eof and irs.bof then\n            getquery=null\n        else\n            set getquery=irs\n        end if\n    end function\n\n    public function getqueryPage(sql,pageNum,PageSize)\n        on error resume next\n        iRs.pageSize=pageSize\n        iRs.open sql,iconn,1,1\n        iRs.AbsolutePage=pageNum\n        if irs.eof and irs.bof then\n            getqueryPage=null\n        else\n            set getqueryPage=irs\n        end if\n\n        response.write \"<span style=’color:green;’>\"& err.number & err.description &\"</span>\"\n    end function\n\n\n’*************************************************************\n’        让结果集移动到第n页.\n    public function setPage(pageNum,PageSize)\n        on error resume next\n        iRs.moveFirst\n        iRs.move((pageNum-1)*PageSize)\n    end function\n\n\nend class\n\n\n’*************************************************************\n用法示例:\ndim cstr\ndim path\npath=server.mappath(\"2data.mdb\")\ncstr= \"DBQ=\"+path+\";DefaultDir=;DRIVER={ Microsoft Access Driver (*.mdb)};\"\ndim rec\nset rec=new RsClass\nrec.connect(cstr)\n\n\nresponse.write \"************************\"\nset tt=rec.getqueryPage(\"select top 8 * from help\",2,4)\nresponse.write tt.recordcount & \"<br />\"\ndo while not tt.eof\n    response.write tt(0) &\"<br />\"\n    tt.movenext\nloop\ntt.movefirst\ntt.close\n%>\n\n\n\n数据库操作类\n\n程序代码 程序代码\n<%\n’────────────────────────────────\n’功能说明：db类是实现数据库连接的类，里面留有数据库连接字符串接口\n’包括模块：无，一般都是被其他模块包括\n’调用方法：1、如果使用原有数据库连接，则不用更改数据库连接字符串ConnStr\n’             具体操作为：Set DBC=New DataBaseClass\n’                         DBC.ConnStr=\"其他连接字符串\"\n’          2、方法使用：Set Conn=DBC.OpenConnection()得到一个连接对象\n’────────────────────────────────\nClass dbclass\n’────────────────────────────────\n’定义变量\nPrivate IConnStr\n’────────────────────────────────\n’ ConnStr属性\nPublic Property Let ConnStr(Val)\n    IConnStr = Val\nEnd Property\n’────────────────────────────────\n’ ConnStr属性\nPublic Property Get ConnStr()\n    ConnStr = IConnStr\nEnd Property\n’────────────────────────────────\n’ 类初始化\nPrivate Sub Class_initialize()\nEnd Sub\n’────────────────────────────────\n’ 类注销\nPrivate Sub Class_Terminate()\n    ConnStr = Null\nEnd Sub\n’────────────────────────────────\n’ 建立一个连接\nPublic Function OpenConnection()\n    Dim TempConn\n    ’On Error Resume Next\n    Set TempConn = Server.CreateObject(\"ADODB.Connection\")\n    TempConn.Open ConnStr\n    Set OpenConnection = TempConn\n    Set TempConn = Nothing\n    if Err.Number <> 0 then\n        Response.Write (\"<script>alert(’[系统错误]nn数据库连接错误！请检查系统参数设置>>站点常量设置,或者 /inc/const.asp文件!’);</script>\")\n        Response.End\n    end if\nEnd Function\nEnd Class\n\n%>\n\n基于adodb.stream的文件操作类\n\n程序代码 程序代码\n<%\n\n’*************************************************************\n’转发时请保留此声明信息,这段声明不并会影响你的速度!\n’*************************************************************\n\n\n’*************************************************************\n’@author:                        面条\n’@realname:                        徐仁禄\n’@email:                        xurenlu@sohu.com\n’@QQ:                            55547082\n’@Homepage:                        http://www.ksdn.net\n’@版权申明:\n’            非盈利性质团体或者个人可以免费使用.\n’*************************************************************\n\n\n’*************************************************************\n’        类名称：        files\n’        类功能:            实现文件读写功能，利用adodb.stream实现,在不支持fso的主机上也可以读写文件.\n’*************************************************************\n\nclass files\n\n\n    private adSaveCreateOverWrite    ’创建文件的时候可以覆盖已经存在的文件.\n    private adSaveCreateNotExist    ’保存文件的时候如果文件不存在，可以创建文件.\n\n\n’*************************************************************\n’        事件名称：        Class_Initialize()\n’        事件发生条件：    类创建时候产生该事件\n’        事件内容:        给私有变量赋值\n’        事件传入参数:    无\n’*************************************************************\n\n\n    sub Class_Initialize()\n         adSaveCreateOverWrite =2\n         adSaveCreateNotExist = 1\n    end sub\n\n\n’*************************************************************\n’        函数名称:        function readfile(filepath)\n’        函数内容:        读出文件\n’        传入参数:        filepath:要读的文件的绝对路径\n’        返回参数:        要读的文件的内容.\n’*************************************************************\nfunction readfile(filepath)\n\n\n    on error resume next\n\n    dim stm2\n\n\n    set stm2 =server.createobject(\"ADODB.Stream\")\n    stm2.Charset = \"gb2312\"\n    stm2.Open\n    stm2.LoadFromFile filepath\n    readfile = stm2.ReadText\nend function\n\n\n’*************************************************************\n’        函数名称:        function writefile(filepath,str)\n’        函数内容:        写入文件\n’        传入参数:        filepath:要读的文件的绝对路径\n’                        str:    要写入的内容\n’        返回参数:        无返回\n’*************************************************************\n\n\n    function writefile(filepath,str)\n\n\n        on error resume next\n\n\n        Set stm = server.createobject(\"ADODB.Stream\")\n        stm.Charset = \"gb2312\"\n        stm.Open\n        stm.WriteText str\n        stm.SaveToFile filepath, adSaveCreateOverWrite\n    end function\n\n\n\n’*************************************************************\n’        函数名称:        function copy(filepath_s,filepath_d)\n’        函数内容:        读出文件\n’        传入参数:        filepath_d:目的文件的绝对路径\n’                        filepath_s:源文件路径\n’*************************************************************\nfunction copy(filepath_s,filepath_d)\n    on error resume next\n    dim stm2\n    set stm2 =server.createobject(\"ADODB.Stream\")\n    stm2.Charset = \"gb2312\"\n    stm2.Open\n    stm2.LoadFromFile filepath_s\n    stm2.SaveToFile filepath_d, adSaveCreateOverWrite\nend function\n\n\nend class\n\n\n%>\n</coolcode>","postDate":"2007-05-17 09:52:36","postId":408,"type":"post","status":"publish","imported":true,"file":"408.md"}