{"title":"搞定一个管理hosts文件的程序","zzzContent":"搞这个脚本的目的:因为yahoo目录严格地遵守开发、测试、生产环境三条线的方针，所以我经常需要设置hosts文件，在各种环境中倒来倒去，手动修改hosts文件，非常麻烦。所以，决定搞一个脚本来管理一下.\n用法：\n   a：我要测试了，所以切换到testing环境。运行hosts test.马上就好了。\n   b:我要添加几个testing 环境的hosts ,运行hosts edit test\n\n具体步骤：\n1.建这样一个文件:\n<coolcode>\n#! /usr/bin/ruby\nsubcmd=ARGV.shift\nDATADIR=\"/home/renlu/bin/hostsdata/\"\nHOSTFILE=\"/etc/hosts\"\n# load the yaml file to a variable\nrequire \"yaml\"\ndef init(env)\n        data=Hash.new\n        open(DATADIR+env+\".yaml\",\"w\") do |f|\n                f.write(YAML.dump(data))\n        end\nend\ndef firstboot\n        init(\"dev\")\n        init(\"test\")\n        init(\"online\")\nend\ndef quit(cmd)\n    if cmd =~ /exit|eixt|quit|qt/ then\n        exit(0)\n    end\nend\n\ndef switch(env)\n        data=load(env)\n        string=\"\"\n        data.each{\n                |domain,ip|\n                string = string +  \"#{ip} #{domain}n\"\n        }\n        open(DATADIR + \"pre\") do |f|\n                string = f.read + string\n        end\n        open(HOSTFILE ,\"w\") do |f|\n                f.write(string)\n        end\n        print string+\"n\"\nend\ndef load(env)\n        data=Hash.new\n        open(DATADIR + env+\".yaml\") do |f|\n                data=YAML.load(f)\n        end\n        data\nend\n#write the hash as yaml to a file\ndef save(env,data)\n        open(DATADIR+env+\".yaml\",\"w\") do |f|\n                f.write(YAML.dump(data))\n        end\nend\ndef cat()\n        cmd2=ARGV.shift\n        if cmd2 =~ /dev/ then\n                env=\"dev\"\n        elsif cmd2 =~ /online|ol/ then\n                env=\"online\"\n        elsif cmd2 =~ /test/ then\n                env=\"test\"\n        end\n        data=load(env)\n        puts data\nend\ndef usage\n        print \"\n        Yet a simple hosts manager version 0.1\n        Author :renlu.xu<helloasp@hotmail.com>\n        URL             :http://www.162cm.com/\n        usage :\n                hosts dev   ---- switch to dev environment\n                hosts test  ---- switch to testing environment\n                hosts online ---- switch to online environment\n                hosts add dev ---- edit a domain for dev|online|test environment\n                hosts add dev ---- the same with 'hosts add dev'\n\n        Notice:\n                dev means Development\n                test means Testing\n                online|ol means testing\n                if you input Quit|exit, We asumed that you want to exit.\n\n         When you use this program first time,Run 'hosts first ' and then initialze the data files'\n\n\"\nend\ndef edit()\n        cmd2=ARGV.shift\n        if cmd2 =~ /dev/ then\n                env=\"dev\"\n        elsif cmd2 =~ /online|ol/ then\n                env=\"online\"\n        elsif cmd2 =~ /test/ then\n                env=\"test\"\n        end\n        print \"input the domain:(such as www.sina.com)n\"\n        domain=gets.chomp\n        quit(domain)\n        print \"input the ip:(127.0.0.1 and so on...n\"\n        ip=gets.chomp\n        quit(ip)\n        data=load(env)\n        data[domain]=ip\n        save(env,data)\n        switch(env)\nend\nquit(subcmd)\nif subcmd =~ /first/ then\n        firstboot\nelsif subcmd =~ /ls|view|cat/ then\n        cat\nelsif subcmd =~ /edit|add/ then\n        edit\nelsif subcmd =~ /dev/ then\n        switch \"dev\"\nelsif subcmd =~ /test/ then\n        switch \"test\"\nelsif subcmd =~ /online|ol/ then\n        switch \"online\"\nelse\n        usage\nend\n</coolcode>\n呵呵。头几行有个设置，一个是hosts文件的地址，一个是存储数据文件的目录。根据你的需要来设置。\n3:\n   建立那个存储你的各位环境hosts信息的目录。\n4 Enjoy the script.\n\n5：如果在是linux环境下，你需要给这个脚本设置访问/etc/hosts的权限:\n<coolcode>\n#sudo chown root:root hosts\n#sudo chmod +s hosts\n</coolcode>\n这样，这个脚本就自然而然地拥有了root用户的权限。也就是说，一个普通用户也能通过这个脚本去修改hosts文件。","postDate":"2008-03-11 22:46:17","postId":609,"type":"post","status":"publish","imported":true,"file":"609.md"}